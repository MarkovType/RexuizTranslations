// --------------------------------------------------------------------------
// Onslaught

// Minimap
string minimapname;
float ons_showmap;

// --------------------------------------------------------------------------
// General stuff

float drawfont;

// Constants
const float COLOR_SPECTATOR = 1337;

#define FONT_DEFAULT 0
#define FONT_USER 8
#define IS_INCREASING(x) ( (x)&SFL_LOWER_IS_BETTER )
#define IS_DECREASING(x) ( !((x)&SFL_LOWER_IS_BETTER) )

//float csqc_flags;

entity playerslots[255]; // 255 is engine limit on maxclients
entity teamslots[17];    // 17 teams (including "spectator team")
.entity owner;

.void(void) draw;
.void(void) draw2d;
.float draw2dflag;
float drawframetime;
entity Draw2d_Post_self;
var void() Draw2d_Post;

float button_zoom;
float any_button_zoom;
float spectatorbutton_zoom;
float button_attack2;
float activeweapon;
float current_viewzoom;
float ignore_plus_zoom;
float ignore_minus_zoom;
float warmup_stage;
float clienttime;

float weaponimpulse[24];
string getcommandkey(string text, string command);

float current_zoomfraction;

string crosshairdot_tex;
float crosshair_hittime;

float vid_width, vid_height;

float camera_active;		// Demo camera is active if set to TRUE
float chase_active_backup;
float camera_roll;
vector camera_direction;

void centerprint(string strMessage);

#define ALPHA_MIN_VISIBLE 0.003

//hooks
float calledhooks;
#define HOOK_START    1
#define HOOK_END      2

float ext_DP_CSQC_QUERYRENDERENTITY;
float ext_DP_RM_SETRENDERENTITY;

var float CSQC_InputEvent_Callback(float bInputType, float nPrimary, float nSecondary);
float draw_crosshair;
float sv_ip2country;
float fov;
float fov_zoomed;
float isdemo_flag;
float player_deadflag;
float sv_spectate;
float g_campaign;
float localgame;
float button_attack2_allowed;
.float float1;

.entity sort_next;
.entity sort_prev;
#define SORT_SWAP(a,b)									\
	b.sort_prev = a.sort_prev;							\
	a.sort_next = b.sort_next;							\
	if(b.sort_next) b.sort_next.sort_prev = a;			\
	if(a.sort_prev) a.sort_prev.sort_next = b;			\
	a.sort_prev = b;									\
	b.sort_next = a
