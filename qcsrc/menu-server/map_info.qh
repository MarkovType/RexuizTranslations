float MAP_INFO_TYPE_ALL              = 131071; // this has to include all above bits
float MAP_INFO_FEATURE_WEAPONS       = 1; // not defined for minstagib-only maps

float MAP_INFO_FLAG_HIDDEN           = 1; // not in lsmaps/menu/vcall/etc., can just be changed to manually
float MAP_INFO_FLAG_FORBIDDEN        = 2; // don't even allow the map by a cvar setting that allows hidden maps
float MAP_INFO_FLAG_FRUSTRATING      = 4; // this map is near impossible to play, enable at your own risk

float map_info_count;
// info about a map that MapInfo loads
string map_info_map_bspname;
string map_info_map_image;
string map_info_map_title;
string map_info_map_description;
string map_info_map_author;
string map_info_map_clientstuff; // not in cache, only for map load
string map_info_map_fog; // not in cache, only for map load
float map_info_map_supported_game_types;
float map_info_map_supported_features;
float map_info_map_flags;
vector map_info_map_mins; // these are '0 0 0' if not supported!
vector map_info_map_maxs; // these are '0 0 0' if not specified!

// load map_info_count; generate mapinfo for maps that miss them, and clear the
// cache; you need to call map_info_filter_game_type afterwards!
void(void) map_info_enumerate;
// filter the info by game type mask (updates MapInfo_count)
float map_info_progress;
float map_info_filter_game_type(float gametype, float pFlagsRequired, float pFlagsForbidden, float pAbortOnGenerate); // 1 on success, 0 on temporary failure (call it again next frame then; use map_info_progress as progress indicator)
float(void) map_info_forbidden_flags; // retrieves current flags from cvars
float(void) map_info_required_flags; // retrieves current flags from cvars
float(float t) map_info_type_from_game_type;
// load info about the i-th map into the map_info_map_* globals
float(float i) map_info_get_by_id; // 1 on success, 0 on failure
string(float i) map_info_bsp_name_by_id;
// load info about a map by name into the map_info_map_* globals
float(string s, float allowGenerate, float gametypeToSet) map_info_get_by_name; // 1 on success, 0 on failure, 2 if it autogenerated a mapinfo file
// look for a map by a prefix, returns the actual map name on success, string_null on failure or ambigous match
string map_info_find_name_match; // the name of the map that was found
float map_info_find_name_first_result; // -1 if none were found, index of first one if not unique but found (FindName then returns -1)
float(string s) map_info_find_name;
// play a map
float(string s) map_info_check_map; // returns 0 if the map can't be played with the current settings
void(string s) map_info_load_map;
// list all maps for the current game type
void(void) map_info_clear_temps; // call this when done with mapinfo for this frame
void(void) map_info_shutdown; // call this in the shutdown handler
void(void) map_info_on_restore;
float(float i) map_info_filter_list_lookup;
