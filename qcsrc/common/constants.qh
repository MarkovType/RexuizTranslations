null_t NULL;
float FALSE = 0;
float TRUE = 1;
const string string_null;

enum {
	GAME_DEATHMATCH = 1,
	GAME_TEAM_DEATHMATCH,
	GAME_DOMINATION,
	GAME_CTF,
	GAME_CATF,
	GAME_CTFT,
	GAME_CONQUEST,
	GAME_KEYHUNT,
	GAME_KEYHUNT_CA,
	GAME_KEYHUNT_FT,
	GAME_ONSLAUGHT,
	GAME_RACE,
	GAME_NEXBALL,
	GAME_CTS,
	GAME_FREEZETAG,
	GAME_CLANARENA,
	GAME_SURVIVE,
	GAME_LMS,
	GAME_COOP,
	GAME_SINGLE,
	GAME_END
};

const float RACE_NET_CHECKPOINT_HIT_QUALIFYING = 0; // byte checkpoint, short time, short recordtime, string recordholder
const float RACE_NET_CHECKPOINT_CLEAR = 1;
const float RACE_NET_CHECKPOINT_NEXT_QUALIFYING = 2; // byte nextcheckpoint, short recordtime, string recordholder
const float RACE_NET_CHECKPOINT_HIT_RACE = 3; // byte checkpoint, short delta, byte lapsdelta, string opponent
const float RACE_NET_CHECKPOINT_HIT_RACE_BY_OPPONENT = 4; // byte checkpoint, short delta, byte lapsdelta, string opponent
const float RACE_NET_CHECKPOINT_NEXT_SPEC_QUALIFYING = 5; // byte nextcheckpoint, float laptime, short recordtime, string recordholder
const float RACE_NET_PENALTY_RACE = 6; // byte penaltytime, string reason
const float RACE_NET_PENALTY_QUALIFYING = 7; // byte penaltytime, string reason

///////////////////////////
// keys pressed
const float KEY_FORWARD		=	1;
const float KEY_BACKWARD	=	2;
const float KEY_LEFT		=	4;
const float KEY_RIGHT		=	8;
const float KEY_JUMP		=	16;
const float KEY_CROUCH		=	32;

///////////////////////////
// cvar constants

float CVAR_SAVE 	= 1;
float CVAR_NOTIFY 	= 2;
float CVAR_READONLY	= 4;
// this assignment must match menu/nexuiz/dialog_settings_misc.c!
float	CHAN_AUTO				= 0;
	// on world: announcers, ...                     INFO
	// on players: item pickup                       ITEMS
	// on entities: UNUSED
	// on csqc: UNUSED
float	CHAN_WEAPON				= 1; // Weapon fire
	// on world: UNUSED
	// on players: weapon firing                     WEAPONS
	// on entities: turret firing                    WEAPONS
	// on csqc: UNUSED
float	CHAN_VOICE				= 2; // Voice/Radio
	// on world: UNUSED
	// on players: voice                             VOICE
	// on entities: ambient                          AMBIENT
	// on csqc: UNUSED
float	CHAN_TRIGGER			= 3; // Triggers/Items
	// on world: UNUSED
	// on players: item pickup                       ITEMS
	// on entities: platforms moving etc.            ITEMS
	// on csqc: UNUSED
float	CHAN_PROJECTILE			= 4; // Projectiles
	// on world: UNUSED
	// on players: projectiles hitting player        SHOTS
	// on entities: projectiles                      SHOTS
	// on csqc: projectile sounds                    SHOTS
float	CHAN_WEAPON2			= 5; // Nex fire (separated as it is a very long sound)
	// on world: UNUSED
	// on players: weapon firing                     WEAPONS
	// on entities: turret firing                    WEAPONS
	// on csqc: UNUSED
float	CHAN_PAIN				= 6; // Pain
	// on world: UNUSED
	// on players: pain                              PAIN
	// on entities: projectiles flying               SHOTS
	// on csqc: player pain                          PAIN
float	CHAN_PLAYER				= 7; // Player body
	// on world: UNUSED
	// on players: player sounds                     PLAYER
	// on entities: player sounds                    PLAYER
	// on csqc: UNUSED

float	ATTN_NONE				= 0;
float	ATTN_MIN				= 0.015625;
float	ATTN_NORM				= 0.5;
float	ATTN_IDLE				= 2;
float	ATTN_STATIC				= 3;
float	ATTN_MAX   				= 3.984375;

#define VOL_BASE 0.7
#define VOL_BASEVOICE 1.0

